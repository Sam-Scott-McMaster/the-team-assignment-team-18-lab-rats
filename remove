#!/bin/bash

#ADDED ERROR HANDLING FOR BAD INPUT

COURSE_DIR="WANKI/$1"
card_count=$(wc -l ${COURSE_DIR}/flashcards.txt)
card_count=$(echo $card_count | grep -Po ^[0-9]+)

echo '-=-=-=-=- CARD LIST -=-=-=-=-'
cat -n $COURSE_DIR/flashcards.txt | sort
echo ''

echo 'Select the card number/1st card in range you would like to delete: '
read deletionNum 
echo "Select the end of the range you would like to delete (leave blank if you just want to delete $deletionNum): "
read deletionNumEnd
echo ''

if ! [[ $deletionNumEnd == "" ]]
then
    if [[ $deletionNumEnd -le $deletionNum ]]
    then
        echo "$deletionNumEnd is an invalid input. Range must go from a lower card number to a higher one."
        exit 0
    fi
fi

for num in $deletionNum $deletionNumEnd
do
    if ! [[ $num =~ ^[0-9]+$ && $num -le $card_count ]]
    then
        echo "$num is an invalid input. Please enter a number associated with a card."
        exit 0
    fi
done

if ! [[ $deletionNumEnd == "" ]]
then
    for i in $(seq $deletionNum $deletionNumEnd);
    do  
        cat -n $COURSE_DIR/flashcards.txt | sort | head -$i | tail -1
    done
else    
    cat -n $COURSE_DIR/flashcards.txt | sort | head -$deletionNum | tail -1
fi


echo ''
echo 'Are you sure you would like to delete this selection? (y/n)'
while read confirmation
do

    if ! [[ $deletionNumEnd == "" ]]
    then
        for i in $(seq $deletionNum $deletionNumEnd);
        do  
            cat -n $COURSE_DIR/flashcards.txt | sort | head -$i | tail -1
        done
    else    
        cat -n $COURSE_DIR/flashcards.txt | sort | head -$deletionNum | tail -1
    fi

    if [[ $confirmation == "y" || $confirmation == "Y" ]]
    then

        if ! [[ $deletionNumEnd == "" ]]
        then
            for i in $(seq $deletionNum $deletionNumEnd);
            do  
                CHECK=$(cat $COURSE_DIR/flashcards.txt | head -$deletionNum | tail -1)
                #cat flashcards.txt | grep -v "$CHECK"  # | tee flashcards.txt

                x=$(cat $COURSE_DIR/flashcards.txt) 
                echo "$x" | grep -v "$CHECK" > $COURSE_DIR/flashcards.txt

                x=$(cat $COURSE_DIR/easy_flashcards.txt) 
                echo "$x" | grep -v "$CHECK" > $COURSE_DIR/easy_flashcards.txt

                x=$(cat $COURSE_DIR/good_flashcards.txt) 
                echo "$x" | grep -v "$CHECK" > $COURSE_DIR/good_flashcards.txt

                x=$(cat $COURSE_DIR/hard_flashcards.txt) 
                echo "$x" | grep -v "$CHECK" > $COURSE_DIR/hard_flashcards.txt

                x=$(cat $COURSE_DIR/again_flashcards.txt) 
                echo "$x" | grep -v "$CHECK" > $COURSE_DIR/again_flashcards.txt
            done
        else    
            CHECK=$(cat $COURSE_DIR/flashcards.txt | head -$deletionNum | tail -1)
            #cat flashcards.txt | grep -v "$CHECK"  # | tee flashcards.txt

            x=$(cat $COURSE_DIR/flashcards.txt) 
            echo "$x" | grep -v "$CHECK" > $COURSE_DIR/flashcards.txt

            x=$(cat $COURSE_DIR/easy_flashcards.txt) 
            echo "$x" | grep -v "$CHECK" > $COURSE_DIR/easy_flashcards.txt

            x=$(cat $COURSE_DIR/good_flashcards.txt) 
            echo "$x" | grep -v "$CHECK" > $COURSE_DIR/good_flashcards.txt

            x=$(cat $COURSE_DIR/hard_flashcards.txt) 
            echo "$x" | grep -v "$CHECK" > $COURSE_DIR/hard_flashcards.txt

            x=$(cat $COURSE_DIR/again_flashcards.txt) 
            echo "$x" | grep -v "$CHECK" > $COURSE_DIR/again_flashcards.txt
        fi
        break
    elif [[ $confirmation == "n" || $confirmation == "N" ]]
    then
        echo "ok then I won't :(" 
        break
    else
        echo "Invalid input. Try again."
    fi
    echo 'Are you sure you would like to delete this card? (y/n)'
done

echo
echo
echo '-=-=-=-=- UPDATED CARD LIST -=-=-=-=-'
cat -n $COURSE_DIR/flashcards.txt | sort
echo ''